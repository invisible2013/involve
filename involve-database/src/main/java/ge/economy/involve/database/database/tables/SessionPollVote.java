/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.converter.TimestampConverter;
import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.database.tables.records.SessionPollVoteRecord;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SessionPollVote extends TableImpl<SessionPollVoteRecord> {

	private static final long serialVersionUID = 1640819933;

	/**
	 * The reference instance of <code>public.session_poll_vote</code>
	 */
	public static final SessionPollVote SESSION_POLL_VOTE = new SessionPollVote();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SessionPollVoteRecord> getRecordType() {
		return SessionPollVoteRecord.class;
	}

	/**
	 * The column <code>public.session_poll_vote.id</code>.
	 */
	public final TableField<SessionPollVoteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.session_poll_vote.reform_id</code>.
	 */
	public final TableField<SessionPollVoteRecord, Integer> REFORM_ID = createField("reform_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.session_poll_vote.session_id</code>.
	 */
	public final TableField<SessionPollVoteRecord, Integer> SESSION_ID = createField("session_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.session_poll_vote.question_id</code>.
	 */
	public final TableField<SessionPollVoteRecord, Integer> QUESTION_ID = createField("question_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.session_poll_vote.answer_id</code>.
	 */
	public final TableField<SessionPollVoteRecord, Integer> ANSWER_ID = createField("answer_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.session_poll_vote.answer_note</code>.
	 */
	public final TableField<SessionPollVoteRecord, String> ANSWER_NOTE = createField("answer_note", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.session_poll_vote.session_vote_id</code>.
	 */
	public final TableField<SessionPollVoteRecord, Integer> SESSION_VOTE_ID = createField("session_vote_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.session_poll_vote.user_id</code>.
	 */
	public final TableField<SessionPollVoteRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.session_poll_vote.ip_address</code>.
	 */
	public final TableField<SessionPollVoteRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.session_poll_vote.client_uid</code>.
	 */
	public final TableField<SessionPollVoteRecord, String> CLIENT_UID = createField("client_uid", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.session_poll_vote.create_date</code>.
	 */
	public final TableField<SessionPollVoteRecord, Date> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * Create a <code>public.session_poll_vote</code> table reference
	 */
	public SessionPollVote() {
		this("session_poll_vote", null);
	}

	/**
	 * Create an aliased <code>public.session_poll_vote</code> table reference
	 */
	public SessionPollVote(String alias) {
		this(alias, SESSION_POLL_VOTE);
	}

	private SessionPollVote(String alias, Table<SessionPollVoteRecord> aliased) {
		this(alias, aliased, null);
	}

	private SessionPollVote(String alias, Table<SessionPollVoteRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SessionPollVoteRecord> getPrimaryKey() {
		return Keys.SESSION_POLL_VOTE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SessionPollVoteRecord>> getKeys() {
		return Arrays.<UniqueKey<SessionPollVoteRecord>>asList(Keys.SESSION_POLL_VOTE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SessionPollVote as(String alias) {
		return new SessionPollVote(alias, this);
	}

	/**
	 * Rename this table
	 */
	public SessionPollVote rename(String name) {
		return new SessionPollVote(name, null);
	}
}
