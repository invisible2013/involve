/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.converter.TimestampConverter;
import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.database.tables.records.NewsRecord;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class News extends TableImpl<NewsRecord> {

	private static final long serialVersionUID = -2013436271;

	/**
	 * The reference instance of <code>public.news</code>
	 */
	public static final News NEWS = new News();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NewsRecord> getRecordType() {
		return NewsRecord.class;
	}

	/**
	 * The column <code>public.news.id</code>.
	 */
	public final TableField<NewsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.news.title</code>.
	 */
	public final TableField<NewsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.news.short_description</code>.
	 */
	public final TableField<NewsRecord, String> SHORT_DESCRIPTION = createField("short_description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.news.text</code>.
	 */
	public final TableField<NewsRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.news.create_date</code>.
	 */
	public final TableField<NewsRecord, Date> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "", new TimestampConverter());

	/**
	 * The column <code>public.news.type_id</code>.
	 */
	public final TableField<NewsRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.news</code> table reference
	 */
	public News() {
		this("news", null);
	}

	/**
	 * Create an aliased <code>public.news</code> table reference
	 */
	public News(String alias) {
		this(alias, NEWS);
	}

	private News(String alias, Table<NewsRecord> aliased) {
		this(alias, aliased, null);
	}

	private News(String alias, Table<NewsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NewsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_NEWS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NewsRecord> getPrimaryKey() {
		return Keys.NEWS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NewsRecord>> getKeys() {
		return Arrays.<UniqueKey<NewsRecord>>asList(Keys.NEWS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public News as(String alias) {
		return new News(alias, this);
	}

	/**
	 * Rename this table
	 */
	public News rename(String name) {
		return new News(name, null);
	}
}
