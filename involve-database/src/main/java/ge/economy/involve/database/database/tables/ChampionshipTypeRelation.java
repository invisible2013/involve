/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.database.tables.records.ChampionshipTypeRelationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChampionshipTypeRelation extends TableImpl<ChampionshipTypeRelationRecord> {

	private static final long serialVersionUID = -1691033704;

	/**
	 * The reference instance of <code>public.championship_type_relation</code>
	 */
	public static final ChampionshipTypeRelation CHAMPIONSHIP_TYPE_RELATION = new ChampionshipTypeRelation();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ChampionshipTypeRelationRecord> getRecordType() {
		return ChampionshipTypeRelationRecord.class;
	}

	/**
	 * The column <code>public.championship_type_relation.id</code>.
	 */
	public final TableField<ChampionshipTypeRelationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.championship_type_relation.championship_type_id</code>.
	 */
	public final TableField<ChampionshipTypeRelationRecord, Integer> CHAMPIONSHIP_TYPE_ID = createField("championship_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.championship_type_relation.championship_sub_type_id</code>.
	 */
	public final TableField<ChampionshipTypeRelationRecord, Integer> CHAMPIONSHIP_SUB_TYPE_ID = createField("championship_sub_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.championship_type_relation</code> table reference
	 */
	public ChampionshipTypeRelation() {
		this("championship_type_relation", null);
	}

	/**
	 * Create an aliased <code>public.championship_type_relation</code> table reference
	 */
	public ChampionshipTypeRelation(String alias) {
		this(alias, CHAMPIONSHIP_TYPE_RELATION);
	}

	private ChampionshipTypeRelation(String alias, Table<ChampionshipTypeRelationRecord> aliased) {
		this(alias, aliased, null);
	}

	private ChampionshipTypeRelation(String alias, Table<ChampionshipTypeRelationRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ChampionshipTypeRelationRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CHAMPIONSHIP_TYPE_RELATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ChampionshipTypeRelationRecord> getPrimaryKey() {
		return Keys.CHAMPIONSHIP_TYPE_RELATION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ChampionshipTypeRelationRecord>> getKeys() {
		return Arrays.<UniqueKey<ChampionshipTypeRelationRecord>>asList(Keys.CHAMPIONSHIP_TYPE_RELATION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChampionshipTypeRelation as(String alias) {
		return new ChampionshipTypeRelation(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ChampionshipTypeRelation rename(String name) {
		return new ChampionshipTypeRelation(name, null);
	}
}
