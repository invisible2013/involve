/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.database.tables.records.EventSubscriptionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventSubscription extends TableImpl<EventSubscriptionRecord> {

	private static final long serialVersionUID = -1609003731;

	/**
	 * The reference instance of <code>public.event_subscription</code>
	 */
	public static final EventSubscription EVENT_SUBSCRIPTION = new EventSubscription();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EventSubscriptionRecord> getRecordType() {
		return EventSubscriptionRecord.class;
	}

	/**
	 * The column <code>public.event_subscription.id</code>.
	 */
	public final TableField<EventSubscriptionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.event_subscription.recipient_email</code>.
	 */
	public final TableField<EventSubscriptionRecord, String> RECIPIENT_EMAIL = createField("recipient_email", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.event_subscription.sport_types</code>.
	 */
	public final TableField<EventSubscriptionRecord, String> SPORT_TYPES = createField("sport_types", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.event_subscription.active</code>.
	 */
	public final TableField<EventSubscriptionRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this, "");

	/**
	 * Create a <code>public.event_subscription</code> table reference
	 */
	public EventSubscription() {
		this("event_subscription", null);
	}

	/**
	 * Create an aliased <code>public.event_subscription</code> table reference
	 */
	public EventSubscription(String alias) {
		this(alias, EVENT_SUBSCRIPTION);
	}

	private EventSubscription(String alias, Table<EventSubscriptionRecord> aliased) {
		this(alias, aliased, null);
	}

	private EventSubscription(String alias, Table<EventSubscriptionRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EventSubscriptionRecord, Integer> getIdentity() {
		return Keys.IDENTITY_EVENT_SUBSCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EventSubscriptionRecord> getPrimaryKey() {
		return Keys.EVENT_SUBSCRIPTION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EventSubscriptionRecord>> getKeys() {
		return Arrays.<UniqueKey<EventSubscriptionRecord>>asList(Keys.EVENT_SUBSCRIPTION_PKEY, Keys.EVENT_SUBSCRIPTION_RECIPIENT_EMAIL_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventSubscription as(String alias) {
		return new EventSubscription(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EventSubscription rename(String name) {
		return new EventSubscription(name, null);
	}
}
