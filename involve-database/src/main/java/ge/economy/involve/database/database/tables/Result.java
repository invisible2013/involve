/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.converter.TimestampConverter;
import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.database.tables.records.ResultRecord;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Result extends TableImpl<ResultRecord> {

	private static final long serialVersionUID = -472731901;

	/**
	 * The reference instance of <code>public.result</code>
	 */
	public static final Result RESULT = new Result();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ResultRecord> getRecordType() {
		return ResultRecord.class;
	}

	/**
	 * The column <code>public.result.id</code>.
	 */
	public final TableField<ResultRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.result.championship_id</code>.
	 */
	public final TableField<ResultRecord, Integer> CHAMPIONSHIP_ID = createField("championship_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.result.sport_type_id</code>.
	 */
	public final TableField<ResultRecord, Integer> SPORT_TYPE_ID = createField("sport_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.result.sportsman_id</code>.
	 */
	public final TableField<ResultRecord, Integer> SPORTSMAN_ID = createField("sportsman_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.result.team_id</code>.
	 */
	public final TableField<ResultRecord, Integer> TEAM_ID = createField("team_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.result.award_id</code>.
	 */
	public final TableField<ResultRecord, Integer> AWARD_ID = createField("award_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.result.score</code>.
	 */
	public final TableField<ResultRecord, String> SCORE = createField("score", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.result.note</code>.
	 */
	public final TableField<ResultRecord, String> NOTE = createField("note", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.result.create_date</code>.
	 */
	public final TableField<ResultRecord, Date> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>public.result.weight</code>.
	 */
	public final TableField<ResultRecord, String> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.result.discipline</code>.
	 */
	public final TableField<ResultRecord, String> DISCIPLINE = createField("discipline", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>public.result</code> table reference
	 */
	public Result() {
		this("result", null);
	}

	/**
	 * Create an aliased <code>public.result</code> table reference
	 */
	public Result(String alias) {
		this(alias, RESULT);
	}

	private Result(String alias, Table<ResultRecord> aliased) {
		this(alias, aliased, null);
	}

	private Result(String alias, Table<ResultRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ResultRecord, Integer> getIdentity() {
		return Keys.IDENTITY_RESULT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ResultRecord> getPrimaryKey() {
		return Keys.RESULT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ResultRecord>> getKeys() {
		return Arrays.<UniqueKey<ResultRecord>>asList(Keys.RESULT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Result as(String alias) {
		return new Result(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Result rename(String name) {
		return new Result(name, null);
	}
}
