/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables.records;


import ge.economy.involve.database.database.tables.Event;

import java.util.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record8<Integer, String, Date, Date, String, String, Integer, Integer> {

	private static final long serialVersionUID = -1539506566;

	/**
	 * Setter for <code>public.event.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.event.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.event.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.event.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.event.start_date</code>.
	 */
	public void setStartDate(Date value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.event.start_date</code>.
	 */
	public Date getStartDate() {
		return (Date) getValue(2);
	}

	/**
	 * Setter for <code>public.event.end_date</code>.
	 */
	public void setEndDate(Date value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.event.end_date</code>.
	 */
	public Date getEndDate() {
		return (Date) getValue(3);
	}

	/**
	 * Setter for <code>public.event.location</code>.
	 */
	public void setLocation(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.event.location</code>.
	 */
	public String getLocation() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>public.event.description</code>.
	 */
	public void setDescription(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.event.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>public.event.event_type_id</code>.
	 */
	public void setEventTypeId(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.event.event_type_id</code>.
	 */
	public Integer getEventTypeId() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>public.event.sport_type_id</code>.
	 */
	public void setSportTypeId(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.event.sport_type_id</code>.
	 */
	public Integer getSportTypeId() {
		return (Integer) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, Date, Date, String, String, Integer, Integer> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, Date, Date, String, String, Integer, Integer> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Event.EVENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Event.EVENT.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field3() {
		return Event.EVENT.START_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field4() {
		return Event.EVENT.END_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Event.EVENT.LOCATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Event.EVENT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return Event.EVENT.EVENT_TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Event.EVENT.SPORT_TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value3() {
		return getStartDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value4() {
		return getEndDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getLocation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getEventTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getSportTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value3(Date value) {
		setStartDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value4(Date value) {
		setEndDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value5(String value) {
		setLocation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value6(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value7(Integer value) {
		setEventTypeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value8(Integer value) {
		setSportTypeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord values(Integer value1, String value2, Date value3, Date value4, String value5, String value6, Integer value7, Integer value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventRecord
	 */
	public EventRecord() {
		super(Event.EVENT);
	}

	/**
	 * Create a detached, initialised EventRecord
	 */
	public EventRecord(Integer id, String name, Date startDate, Date endDate, String location, String description, Integer eventTypeId, Integer sportTypeId) {
		super(Event.EVENT);

		setValue(0, id);
		setValue(1, name);
		setValue(2, startDate);
		setValue(3, endDate);
		setValue(4, location);
		setValue(5, description);
		setValue(6, eventTypeId);
		setValue(7, sportTypeId);
	}
}
