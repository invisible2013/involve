/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.converter.TimestampConverter;
import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.tables.records.SportsmanRecord;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sportsman extends TableImpl<SportsmanRecord> {

	private static final long serialVersionUID = -157062014;

	/**
	 * The reference instance of <code>public.sportsman</code>
	 */
	public static final Sportsman SPORTSMAN = new Sportsman();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SportsmanRecord> getRecordType() {
		return SportsmanRecord.class;
	}

	/**
	 * The column <code>public.sportsman.id</code>.
	 */
	public final TableField<SportsmanRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.sportsman.first_name</code>.
	 */
	public final TableField<SportsmanRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman.last_name</code>.
	 */
	public final TableField<SportsmanRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman.birth_date</code>.
	 */
	public final TableField<SportsmanRecord, Date> BIRTH_DATE = createField("birth_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>public.sportsman.region_id</code>.
	 */
	public final TableField<SportsmanRecord, Integer> REGION_ID = createField("region_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.sportsman.sport_type_id</code>.
	 */
	public final TableField<SportsmanRecord, Integer> SPORT_TYPE_ID = createField("sport_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.sportsman.gender_id</code>.
	 */
	public final TableField<SportsmanRecord, Integer> GENDER_ID = createField("gender_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.sportsman.create_date</code>.
	 */
	public final TableField<SportsmanRecord, Date> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>public.sportsman.rank_id</code>.
	 */
	public final TableField<SportsmanRecord, Integer> RANK_ID = createField("rank_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.sportsman.city_id</code>.
	 */
	public final TableField<SportsmanRecord, Integer> CITY_ID = createField("city_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.sportsman.height</code>.
	 */
	public final TableField<SportsmanRecord, String> HEIGHT = createField("height", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman.biography</code>.
	 */
	public final TableField<SportsmanRecord, String> BIOGRAPHY = createField("biography", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman.image_url</code>.
	 */
	public final TableField<SportsmanRecord, String> IMAGE_URL = createField("image_url", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman.is_para_sportsman</code>.
	 */
	public final TableField<SportsmanRecord, Boolean> IS_PARA_SPORTSMAN = createField("is_para_sportsman", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.sportsman.death_date</code>.
	 */
	public final TableField<SportsmanRecord, Date> DEATH_DATE = createField("death_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>public.sportsman.career_start_date</code>.
	 */
	public final TableField<SportsmanRecord, Date> CAREER_START_DATE = createField("career_start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>public.sportsman.career_end_date</code>.
	 */
	public final TableField<SportsmanRecord, Date> CAREER_END_DATE = createField("career_end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>public.sportsman.district</code>.
	 */
	public final TableField<SportsmanRecord, String> DISTRICT = createField("district", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman.comment</code>.
	 */
	public final TableField<SportsmanRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman.is_olimpic</code>.
	 */
	public final TableField<SportsmanRecord, Boolean> IS_OLIMPIC = createField("is_olimpic", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.sportsman.is_paralympic</code>.
	 */
	public final TableField<SportsmanRecord, Boolean> IS_PARALYMPIC = createField("is_paralympic", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>public.sportsman</code> table reference
	 */
	public Sportsman() {
		this("sportsman", null);
	}

	/**
	 * Create an aliased <code>public.sportsman</code> table reference
	 */
	public Sportsman(String alias) {
		this(alias, SPORTSMAN);
	}

	private Sportsman(String alias, Table<SportsmanRecord> aliased) {
		this(alias, aliased, null);
	}

	private Sportsman(String alias, Table<SportsmanRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SportsmanRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SPORTSMAN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SportsmanRecord> getPrimaryKey() {
		return Keys.SPORTSMAN_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SportsmanRecord>> getKeys() {
		return Arrays.<UniqueKey<SportsmanRecord>>asList(Keys.SPORTSMAN_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<SportsmanRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<SportsmanRecord, ?>>asList(Keys.SPORTSMAN__SPORTSMAN_GENDER_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Sportsman as(String alias) {
		return new Sportsman(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Sportsman rename(String name) {
		return new Sportsman(name, null);
	}
}
