/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables.records;


import ge.economy.involve.database.database.tables.ChampionshipTypeRelation;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChampionshipTypeRelationRecord extends UpdatableRecordImpl<ChampionshipTypeRelationRecord> implements Record3<Integer, Integer, Integer> {

	private static final long serialVersionUID = 31524104;

	/**
	 * Setter for <code>public.championship_type_relation.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.championship_type_relation.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.championship_type_relation.championship_type_id</code>.
	 */
	public void setChampionshipTypeId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.championship_type_relation.championship_type_id</code>.
	 */
	public Integer getChampionshipTypeId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.championship_type_relation.championship_sub_type_id</code>.
	 */
	public void setChampionshipSubTypeId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.championship_type_relation.championship_sub_type_id</code>.
	 */
	public Integer getChampionshipSubTypeId() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION.CHAMPIONSHIP_TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION.CHAMPIONSHIP_SUB_TYPE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getChampionshipTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getChampionshipSubTypeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChampionshipTypeRelationRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChampionshipTypeRelationRecord value2(Integer value) {
		setChampionshipTypeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChampionshipTypeRelationRecord value3(Integer value) {
		setChampionshipSubTypeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChampionshipTypeRelationRecord values(Integer value1, Integer value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ChampionshipTypeRelationRecord
	 */
	public ChampionshipTypeRelationRecord() {
		super(ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION);
	}

	/**
	 * Create a detached, initialised ChampionshipTypeRelationRecord
	 */
	public ChampionshipTypeRelationRecord(Integer id, Integer championshipTypeId, Integer championshipSubTypeId) {
		super(ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION);

		setValue(0, id);
		setValue(1, championshipTypeId);
		setValue(2, championshipSubTypeId);
	}
}
