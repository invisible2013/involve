/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database;


import ge.economy.involve.database.database.tables.Award;
import ge.economy.involve.database.database.tables.Championship;
import ge.economy.involve.database.database.tables.ChampionshipSubType;
import ge.economy.involve.database.database.tables.ChampionshipType;
import ge.economy.involve.database.database.tables.ChampionshipTypeRelation;
import ge.economy.involve.database.database.tables.City;
import ge.economy.involve.database.database.tables.Condition;
import ge.economy.involve.database.database.tables.Event;
import ge.economy.involve.database.database.tables.EventSubscription;
import ge.economy.involve.database.database.tables.EventType;
import ge.economy.involve.database.database.tables.FileType;
import ge.economy.involve.database.database.tables.Gender;
import ge.economy.involve.database.database.tables.News;
import ge.economy.involve.database.database.tables.NewsFile;
import ge.economy.involve.database.database.tables.NewsType;
import ge.economy.involve.database.database.tables.ObjectType;
import ge.economy.involve.database.database.tables.Organisation;
import ge.economy.involve.database.database.tables.Ownership;
import ge.economy.involve.database.database.tables.Purpose;
import ge.economy.involve.database.database.tables.Referee;
import ge.economy.involve.database.database.tables.RefereeCategory;
import ge.economy.involve.database.database.tables.RefereeSportType;
import ge.economy.involve.database.database.tables.Region;
import ge.economy.involve.database.database.tables.Result;
import ge.economy.involve.database.database.tables.Section;
import ge.economy.involve.database.database.tables.SportObject;
import ge.economy.involve.database.database.tables.SportType;
import ge.economy.involve.database.database.tables.SportTypeFile;
import ge.economy.involve.database.database.tables.Sportsman;
import ge.economy.involve.database.database.tables.SportsmanFile;
import ge.economy.involve.database.database.tables.SportsmanRank;
import ge.economy.involve.database.database.tables.SportsmanSportType;
import ge.economy.involve.database.database.tables.SportsmanTrainer;
import ge.economy.involve.database.database.tables.Statistic;
import ge.economy.involve.database.database.tables.StatisticCategory;
import ge.economy.involve.database.database.tables.StatisticRangeType;
import ge.economy.involve.database.database.tables.StatisticSportType;
import ge.economy.involve.database.database.tables.StatisticType;
import ge.economy.involve.database.database.tables.SystemProperties;
import ge.economy.involve.database.database.tables.SystemPropertiesGroup;
import ge.economy.involve.database.database.tables.Trainer;
import ge.economy.involve.database.database.tables.TrainerQualification;
import ge.economy.involve.database.database.tables.TrainerSportType;
import ge.economy.involve.database.database.tables.User;
import ge.economy.involve.database.database.tables.UserStatus;
import ge.economy.involve.database.database.tables.records.AwardRecord;
import ge.economy.involve.database.database.tables.records.ChampionshipRecord;
import ge.economy.involve.database.database.tables.records.ChampionshipSubTypeRecord;
import ge.economy.involve.database.database.tables.records.ChampionshipTypeRecord;
import ge.economy.involve.database.database.tables.records.ChampionshipTypeRelationRecord;
import ge.economy.involve.database.database.tables.records.CityRecord;
import ge.economy.involve.database.database.tables.records.ConditionRecord;
import ge.economy.involve.database.database.tables.records.EventRecord;
import ge.economy.involve.database.database.tables.records.EventSubscriptionRecord;
import ge.economy.involve.database.database.tables.records.EventTypeRecord;
import ge.economy.involve.database.database.tables.records.FileTypeRecord;
import ge.economy.involve.database.database.tables.records.GenderRecord;
import ge.economy.involve.database.database.tables.records.NewsFileRecord;
import ge.economy.involve.database.database.tables.records.NewsRecord;
import ge.economy.involve.database.database.tables.records.NewsTypeRecord;
import ge.economy.involve.database.database.tables.records.ObjectTypeRecord;
import ge.economy.involve.database.database.tables.records.OrganisationRecord;
import ge.economy.involve.database.database.tables.records.OwnershipRecord;
import ge.economy.involve.database.database.tables.records.PurposeRecord;
import ge.economy.involve.database.database.tables.records.RefereeCategoryRecord;
import ge.economy.involve.database.database.tables.records.RefereeRecord;
import ge.economy.involve.database.database.tables.records.RefereeSportTypeRecord;
import ge.economy.involve.database.database.tables.records.RegionRecord;
import ge.economy.involve.database.database.tables.records.ResultRecord;
import ge.economy.involve.database.database.tables.records.SectionRecord;
import ge.economy.involve.database.database.tables.records.SportObjectRecord;
import ge.economy.involve.database.database.tables.records.SportTypeFileRecord;
import ge.economy.involve.database.database.tables.records.SportTypeRecord;
import ge.economy.involve.database.database.tables.records.SportsmanFileRecord;
import ge.economy.involve.database.database.tables.records.SportsmanRankRecord;
import ge.economy.involve.database.database.tables.records.SportsmanRecord;
import ge.economy.involve.database.database.tables.records.SportsmanSportTypeRecord;
import ge.economy.involve.database.database.tables.records.SportsmanTrainerRecord;
import ge.economy.involve.database.database.tables.records.StatisticCategoryRecord;
import ge.economy.involve.database.database.tables.records.StatisticRangeTypeRecord;
import ge.economy.involve.database.database.tables.records.StatisticRecord;
import ge.economy.involve.database.database.tables.records.StatisticSportTypeRecord;
import ge.economy.involve.database.database.tables.records.StatisticTypeRecord;
import ge.economy.involve.database.database.tables.records.SystemPropertiesGroupRecord;
import ge.economy.involve.database.database.tables.records.SystemPropertiesRecord;
import ge.economy.involve.database.database.tables.records.TrainerQualificationRecord;
import ge.economy.involve.database.database.tables.records.TrainerRecord;
import ge.economy.involve.database.database.tables.records.TrainerSportTypeRecord;
import ge.economy.involve.database.database.tables.records.UserRecord;
import ge.economy.involve.database.database.tables.records.UserStatusRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<AwardRecord, Integer> IDENTITY_AWARD = Identities0.IDENTITY_AWARD;
	public static final Identity<ChampionshipRecord, Integer> IDENTITY_CHAMPIONSHIP = Identities0.IDENTITY_CHAMPIONSHIP;
	public static final Identity<ChampionshipSubTypeRecord, Integer> IDENTITY_CHAMPIONSHIP_SUB_TYPE = Identities0.IDENTITY_CHAMPIONSHIP_SUB_TYPE;
	public static final Identity<ChampionshipTypeRecord, Integer> IDENTITY_CHAMPIONSHIP_TYPE = Identities0.IDENTITY_CHAMPIONSHIP_TYPE;
	public static final Identity<ChampionshipTypeRelationRecord, Integer> IDENTITY_CHAMPIONSHIP_TYPE_RELATION = Identities0.IDENTITY_CHAMPIONSHIP_TYPE_RELATION;
	public static final Identity<CityRecord, Integer> IDENTITY_CITY = Identities0.IDENTITY_CITY;
	public static final Identity<ConditionRecord, Integer> IDENTITY_CONDITION = Identities0.IDENTITY_CONDITION;
	public static final Identity<EventRecord, Integer> IDENTITY_EVENT = Identities0.IDENTITY_EVENT;
	public static final Identity<EventSubscriptionRecord, Integer> IDENTITY_EVENT_SUBSCRIPTION = Identities0.IDENTITY_EVENT_SUBSCRIPTION;
	public static final Identity<EventTypeRecord, Integer> IDENTITY_EVENT_TYPE = Identities0.IDENTITY_EVENT_TYPE;
	public static final Identity<FileTypeRecord, Integer> IDENTITY_FILE_TYPE = Identities0.IDENTITY_FILE_TYPE;
	public static final Identity<GenderRecord, Integer> IDENTITY_GENDER = Identities0.IDENTITY_GENDER;
	public static final Identity<NewsRecord, Integer> IDENTITY_NEWS = Identities0.IDENTITY_NEWS;
	public static final Identity<NewsFileRecord, Integer> IDENTITY_NEWS_FILE = Identities0.IDENTITY_NEWS_FILE;
	public static final Identity<ObjectTypeRecord, Integer> IDENTITY_OBJECT_TYPE = Identities0.IDENTITY_OBJECT_TYPE;
	public static final Identity<OrganisationRecord, Integer> IDENTITY_ORGANISATION = Identities0.IDENTITY_ORGANISATION;
	public static final Identity<OwnershipRecord, Integer> IDENTITY_OWNERSHIP = Identities0.IDENTITY_OWNERSHIP;
	public static final Identity<PurposeRecord, Integer> IDENTITY_PURPOSE = Identities0.IDENTITY_PURPOSE;
	public static final Identity<RefereeRecord, Integer> IDENTITY_REFEREE = Identities0.IDENTITY_REFEREE;
	public static final Identity<RefereeCategoryRecord, Integer> IDENTITY_REFEREE_CATEGORY = Identities0.IDENTITY_REFEREE_CATEGORY;
	public static final Identity<RefereeSportTypeRecord, Integer> IDENTITY_REFEREE_SPORT_TYPE = Identities0.IDENTITY_REFEREE_SPORT_TYPE;
	public static final Identity<RegionRecord, Integer> IDENTITY_REGION = Identities0.IDENTITY_REGION;
	public static final Identity<ResultRecord, Integer> IDENTITY_RESULT = Identities0.IDENTITY_RESULT;
	public static final Identity<SectionRecord, Integer> IDENTITY_SECTION = Identities0.IDENTITY_SECTION;
	public static final Identity<SportObjectRecord, Integer> IDENTITY_SPORT_OBJECT = Identities0.IDENTITY_SPORT_OBJECT;
	public static final Identity<SportTypeRecord, Integer> IDENTITY_SPORT_TYPE = Identities0.IDENTITY_SPORT_TYPE;
	public static final Identity<SportTypeFileRecord, Integer> IDENTITY_SPORT_TYPE_FILE = Identities0.IDENTITY_SPORT_TYPE_FILE;
	public static final Identity<SportsmanRecord, Integer> IDENTITY_SPORTSMAN = Identities0.IDENTITY_SPORTSMAN;
	public static final Identity<SportsmanFileRecord, Integer> IDENTITY_SPORTSMAN_FILE = Identities0.IDENTITY_SPORTSMAN_FILE;
	public static final Identity<SportsmanRankRecord, Integer> IDENTITY_SPORTSMAN_RANK = Identities0.IDENTITY_SPORTSMAN_RANK;
	public static final Identity<SportsmanSportTypeRecord, Integer> IDENTITY_SPORTSMAN_SPORT_TYPE = Identities0.IDENTITY_SPORTSMAN_SPORT_TYPE;
	public static final Identity<SportsmanTrainerRecord, Integer> IDENTITY_SPORTSMAN_TRAINER = Identities0.IDENTITY_SPORTSMAN_TRAINER;
	public static final Identity<StatisticRecord, Integer> IDENTITY_STATISTIC = Identities0.IDENTITY_STATISTIC;
	public static final Identity<StatisticCategoryRecord, Integer> IDENTITY_STATISTIC_CATEGORY = Identities0.IDENTITY_STATISTIC_CATEGORY;
	public static final Identity<StatisticRangeTypeRecord, Integer> IDENTITY_STATISTIC_RANGE_TYPE = Identities0.IDENTITY_STATISTIC_RANGE_TYPE;
	public static final Identity<StatisticSportTypeRecord, Integer> IDENTITY_STATISTIC_SPORT_TYPE = Identities0.IDENTITY_STATISTIC_SPORT_TYPE;
	public static final Identity<StatisticTypeRecord, Integer> IDENTITY_STATISTIC_TYPE = Identities0.IDENTITY_STATISTIC_TYPE;
	public static final Identity<SystemPropertiesRecord, Integer> IDENTITY_SYSTEM_PROPERTIES = Identities0.IDENTITY_SYSTEM_PROPERTIES;
	public static final Identity<SystemPropertiesGroupRecord, Integer> IDENTITY_SYSTEM_PROPERTIES_GROUP = Identities0.IDENTITY_SYSTEM_PROPERTIES_GROUP;
	public static final Identity<TrainerRecord, Integer> IDENTITY_TRAINER = Identities0.IDENTITY_TRAINER;
	public static final Identity<TrainerQualificationRecord, Integer> IDENTITY_TRAINER_QUALIFICATION = Identities0.IDENTITY_TRAINER_QUALIFICATION;
	public static final Identity<TrainerSportTypeRecord, Integer> IDENTITY_TRAINER_SPORT_TYPE = Identities0.IDENTITY_TRAINER_SPORT_TYPE;
	public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
	public static final Identity<UserStatusRecord, Integer> IDENTITY_USER_STATUS = Identities0.IDENTITY_USER_STATUS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AwardRecord> AWARD_PKEY = UniqueKeys0.AWARD_PKEY;
	public static final UniqueKey<ChampionshipRecord> CHAMPIONSHIP_PKEY = UniqueKeys0.CHAMPIONSHIP_PKEY;
	public static final UniqueKey<ChampionshipSubTypeRecord> CHAMPIONSHIP_SUB_TYPE_PKEY = UniqueKeys0.CHAMPIONSHIP_SUB_TYPE_PKEY;
	public static final UniqueKey<ChampionshipTypeRecord> CHEMPIONSHIP_TYPE_PKEY = UniqueKeys0.CHEMPIONSHIP_TYPE_PKEY;
	public static final UniqueKey<ChampionshipTypeRelationRecord> CHAMPIONSHIP_TYPE_RELATION_PKEY = UniqueKeys0.CHAMPIONSHIP_TYPE_RELATION_PKEY;
	public static final UniqueKey<CityRecord> CITY_PKEY = UniqueKeys0.CITY_PKEY;
	public static final UniqueKey<ConditionRecord> CONDITION_PKEY = UniqueKeys0.CONDITION_PKEY;
	public static final UniqueKey<EventRecord> EVENT_PKEY = UniqueKeys0.EVENT_PKEY;
	public static final UniqueKey<EventSubscriptionRecord> EVENT_SUBSCRIPTION_PKEY = UniqueKeys0.EVENT_SUBSCRIPTION_PKEY;
	public static final UniqueKey<EventSubscriptionRecord> EVENT_SUBSCRIPTION_RECIPIENT_EMAIL_KEY = UniqueKeys0.EVENT_SUBSCRIPTION_RECIPIENT_EMAIL_KEY;
	public static final UniqueKey<EventTypeRecord> EVENT_TYPE_PKEY = UniqueKeys0.EVENT_TYPE_PKEY;
	public static final UniqueKey<FileTypeRecord> FILE_TYPE_PKEY = UniqueKeys0.FILE_TYPE_PKEY;
	public static final UniqueKey<GenderRecord> GENDER_PKEY = UniqueKeys0.GENDER_PKEY;
	public static final UniqueKey<NewsRecord> NEWS_PKEY = UniqueKeys0.NEWS_PKEY;
	public static final UniqueKey<NewsFileRecord> NEWS_FILE_PKEY = UniqueKeys0.NEWS_FILE_PKEY;
	public static final UniqueKey<NewsTypeRecord> NEWS_TYPE_PKEY = UniqueKeys0.NEWS_TYPE_PKEY;
	public static final UniqueKey<ObjectTypeRecord> OBJECT_TYPE_PKEY = UniqueKeys0.OBJECT_TYPE_PKEY;
	public static final UniqueKey<OrganisationRecord> ORGANISATION_PKEY = UniqueKeys0.ORGANISATION_PKEY;
	public static final UniqueKey<OwnershipRecord> OWNERSHIP_PKEY = UniqueKeys0.OWNERSHIP_PKEY;
	public static final UniqueKey<PurposeRecord> PURPOSE_PKEY = UniqueKeys0.PURPOSE_PKEY;
	public static final UniqueKey<RefereeRecord> REFEREE_PKEY = UniqueKeys0.REFEREE_PKEY;
	public static final UniqueKey<RefereeCategoryRecord> CATEGORY_PKEY = UniqueKeys0.CATEGORY_PKEY;
	public static final UniqueKey<RefereeSportTypeRecord> REFEREE_SPORT_TYPE_PKEY = UniqueKeys0.REFEREE_SPORT_TYPE_PKEY;
	public static final UniqueKey<RefereeSportTypeRecord> REFEREE_SPORT_TYPE_REFEREE_ID_SPORT_TYPE_ID_KEY = UniqueKeys0.REFEREE_SPORT_TYPE_REFEREE_ID_SPORT_TYPE_ID_KEY;
	public static final UniqueKey<RegionRecord> REGION_PKEY = UniqueKeys0.REGION_PKEY;
	public static final UniqueKey<ResultRecord> RESULT_PKEY = UniqueKeys0.RESULT_PKEY;
	public static final UniqueKey<SectionRecord> SECTION_PKEY = UniqueKeys0.SECTION_PKEY;
	public static final UniqueKey<SportObjectRecord> SPORT_OBJECT_PKEY = UniqueKeys0.SPORT_OBJECT_PKEY;
	public static final UniqueKey<SportTypeRecord> SPORT_TYPE_PKEY = UniqueKeys0.SPORT_TYPE_PKEY;
	public static final UniqueKey<SportTypeFileRecord> SPORT_TYPE_FILE_PKEY = UniqueKeys0.SPORT_TYPE_FILE_PKEY;
	public static final UniqueKey<SportsmanRecord> SPORTSMAN_PKEY = UniqueKeys0.SPORTSMAN_PKEY;
	public static final UniqueKey<SportsmanFileRecord> SPORTSMAN_FILE_PKEY = UniqueKeys0.SPORTSMAN_FILE_PKEY;
	public static final UniqueKey<SportsmanRankRecord> TITLE_PKEY = UniqueKeys0.TITLE_PKEY;
	public static final UniqueKey<SportsmanSportTypeRecord> SPORTSMAN_SPORT_TYPE_PKEY = UniqueKeys0.SPORTSMAN_SPORT_TYPE_PKEY;
	public static final UniqueKey<SportsmanTrainerRecord> SPORTSMAN_TRAINER_PKEY = UniqueKeys0.SPORTSMAN_TRAINER_PKEY;
	public static final UniqueKey<StatisticRecord> STATISTIC_SPORTSMAN_PKEY = UniqueKeys0.STATISTIC_SPORTSMAN_PKEY;
	public static final UniqueKey<StatisticCategoryRecord> STATISTIC_CATEGORY_PKEY = UniqueKeys0.STATISTIC_CATEGORY_PKEY;
	public static final UniqueKey<StatisticRangeTypeRecord> STATISTIC_RANGE_TYPE_PKEY = UniqueKeys0.STATISTIC_RANGE_TYPE_PKEY;
	public static final UniqueKey<StatisticSportTypeRecord> STATISTIC_SPORT_TYPE_PKEY = UniqueKeys0.STATISTIC_SPORT_TYPE_PKEY;
	public static final UniqueKey<StatisticTypeRecord> STATISTIC_TYPE_PKEY = UniqueKeys0.STATISTIC_TYPE_PKEY;
	public static final UniqueKey<SystemPropertiesRecord> SYSTEM_PROPERTIES_PKEY = UniqueKeys0.SYSTEM_PROPERTIES_PKEY;
	public static final UniqueKey<SystemPropertiesGroupRecord> SYSTEM_PROPERTIES_GROUP_PKEY = UniqueKeys0.SYSTEM_PROPERTIES_GROUP_PKEY;
	public static final UniqueKey<TrainerRecord> TRAINER_PKEY = UniqueKeys0.TRAINER_PKEY;
	public static final UniqueKey<TrainerQualificationRecord> QUALIFICATION_PKEY = UniqueKeys0.QUALIFICATION_PKEY;
	public static final UniqueKey<TrainerSportTypeRecord> TRAINER_SPORT_TYPE_PKEY = UniqueKeys0.TRAINER_SPORT_TYPE_PKEY;
	public static final UniqueKey<UserRecord> USER_PKEY = UniqueKeys0.USER_PKEY;
	public static final UniqueKey<UserStatusRecord> USER_STATUS_PKEY = UniqueKeys0.USER_STATUS_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<SportsmanRecord, GenderRecord> SPORTSMAN__SPORTSMAN_GENDER_ID_FKEY = ForeignKeys0.SPORTSMAN__SPORTSMAN_GENDER_ID_FKEY;
	public static final ForeignKey<SystemPropertiesRecord, SystemPropertiesGroupRecord> SYSTEM_PROPERTIES__SYSTEM_PROPERTIES_GROUP_ID_FKEY = ForeignKeys0.SYSTEM_PROPERTIES__SYSTEM_PROPERTIES_GROUP_ID_FKEY;
	public static final ForeignKey<UserRecord, UserStatusRecord> USER__USER_STATUS_ID_FKEY = ForeignKeys0.USER__USER_STATUS_ID_FKEY;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<AwardRecord, Integer> IDENTITY_AWARD = createIdentity(Award.AWARD, Award.AWARD.ID);
		public static Identity<ChampionshipRecord, Integer> IDENTITY_CHAMPIONSHIP = createIdentity(Championship.CHAMPIONSHIP, Championship.CHAMPIONSHIP.ID);
		public static Identity<ChampionshipSubTypeRecord, Integer> IDENTITY_CHAMPIONSHIP_SUB_TYPE = createIdentity(ChampionshipSubType.CHAMPIONSHIP_SUB_TYPE, ChampionshipSubType.CHAMPIONSHIP_SUB_TYPE.ID);
		public static Identity<ChampionshipTypeRecord, Integer> IDENTITY_CHAMPIONSHIP_TYPE = createIdentity(ChampionshipType.CHAMPIONSHIP_TYPE, ChampionshipType.CHAMPIONSHIP_TYPE.ID);
		public static Identity<ChampionshipTypeRelationRecord, Integer> IDENTITY_CHAMPIONSHIP_TYPE_RELATION = createIdentity(ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION, ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION.ID);
		public static Identity<CityRecord, Integer> IDENTITY_CITY = createIdentity(City.CITY, City.CITY.ID);
		public static Identity<ConditionRecord, Integer> IDENTITY_CONDITION = createIdentity(Condition.CONDITION, Condition.CONDITION.ID);
		public static Identity<EventRecord, Integer> IDENTITY_EVENT = createIdentity(Event.EVENT, Event.EVENT.ID);
		public static Identity<EventSubscriptionRecord, Integer> IDENTITY_EVENT_SUBSCRIPTION = createIdentity(EventSubscription.EVENT_SUBSCRIPTION, EventSubscription.EVENT_SUBSCRIPTION.ID);
		public static Identity<EventTypeRecord, Integer> IDENTITY_EVENT_TYPE = createIdentity(EventType.EVENT_TYPE, EventType.EVENT_TYPE.ID);
		public static Identity<FileTypeRecord, Integer> IDENTITY_FILE_TYPE = createIdentity(FileType.FILE_TYPE, FileType.FILE_TYPE.ID);
		public static Identity<GenderRecord, Integer> IDENTITY_GENDER = createIdentity(Gender.GENDER, Gender.GENDER.ID);
		public static Identity<NewsRecord, Integer> IDENTITY_NEWS = createIdentity(News.NEWS, News.NEWS.ID);
		public static Identity<NewsFileRecord, Integer> IDENTITY_NEWS_FILE = createIdentity(NewsFile.NEWS_FILE, NewsFile.NEWS_FILE.ID);
		public static Identity<ObjectTypeRecord, Integer> IDENTITY_OBJECT_TYPE = createIdentity(ObjectType.OBJECT_TYPE, ObjectType.OBJECT_TYPE.ID);
		public static Identity<OrganisationRecord, Integer> IDENTITY_ORGANISATION = createIdentity(Organisation.ORGANISATION, Organisation.ORGANISATION.ID);
		public static Identity<OwnershipRecord, Integer> IDENTITY_OWNERSHIP = createIdentity(Ownership.OWNERSHIP, Ownership.OWNERSHIP.ID);
		public static Identity<PurposeRecord, Integer> IDENTITY_PURPOSE = createIdentity(Purpose.PURPOSE, Purpose.PURPOSE.ID);
		public static Identity<RefereeRecord, Integer> IDENTITY_REFEREE = createIdentity(Referee.REFEREE, Referee.REFEREE.ID);
		public static Identity<RefereeCategoryRecord, Integer> IDENTITY_REFEREE_CATEGORY = createIdentity(RefereeCategory.REFEREE_CATEGORY, RefereeCategory.REFEREE_CATEGORY.ID);
		public static Identity<RefereeSportTypeRecord, Integer> IDENTITY_REFEREE_SPORT_TYPE = createIdentity(RefereeSportType.REFEREE_SPORT_TYPE, RefereeSportType.REFEREE_SPORT_TYPE.ID);
		public static Identity<RegionRecord, Integer> IDENTITY_REGION = createIdentity(Region.REGION, Region.REGION.ID);
		public static Identity<ResultRecord, Integer> IDENTITY_RESULT = createIdentity(Result.RESULT, Result.RESULT.ID);
		public static Identity<SectionRecord, Integer> IDENTITY_SECTION = createIdentity(Section.SECTION, Section.SECTION.ID);
		public static Identity<SportObjectRecord, Integer> IDENTITY_SPORT_OBJECT = createIdentity(SportObject.SPORT_OBJECT, SportObject.SPORT_OBJECT.ID);
		public static Identity<SportTypeRecord, Integer> IDENTITY_SPORT_TYPE = createIdentity(SportType.SPORT_TYPE, SportType.SPORT_TYPE.ID);
		public static Identity<SportTypeFileRecord, Integer> IDENTITY_SPORT_TYPE_FILE = createIdentity(SportTypeFile.SPORT_TYPE_FILE, SportTypeFile.SPORT_TYPE_FILE.ID);
		public static Identity<SportsmanRecord, Integer> IDENTITY_SPORTSMAN = createIdentity(Sportsman.SPORTSMAN, Sportsman.SPORTSMAN.ID);
		public static Identity<SportsmanFileRecord, Integer> IDENTITY_SPORTSMAN_FILE = createIdentity(SportsmanFile.SPORTSMAN_FILE, SportsmanFile.SPORTSMAN_FILE.ID);
		public static Identity<SportsmanRankRecord, Integer> IDENTITY_SPORTSMAN_RANK = createIdentity(SportsmanRank.SPORTSMAN_RANK, SportsmanRank.SPORTSMAN_RANK.ID);
		public static Identity<SportsmanSportTypeRecord, Integer> IDENTITY_SPORTSMAN_SPORT_TYPE = createIdentity(SportsmanSportType.SPORTSMAN_SPORT_TYPE, SportsmanSportType.SPORTSMAN_SPORT_TYPE.ID);
		public static Identity<SportsmanTrainerRecord, Integer> IDENTITY_SPORTSMAN_TRAINER = createIdentity(SportsmanTrainer.SPORTSMAN_TRAINER, SportsmanTrainer.SPORTSMAN_TRAINER.ID);
		public static Identity<StatisticRecord, Integer> IDENTITY_STATISTIC = createIdentity(Statistic.STATISTIC, Statistic.STATISTIC.ID);
		public static Identity<StatisticCategoryRecord, Integer> IDENTITY_STATISTIC_CATEGORY = createIdentity(StatisticCategory.STATISTIC_CATEGORY, StatisticCategory.STATISTIC_CATEGORY.ID);
		public static Identity<StatisticRangeTypeRecord, Integer> IDENTITY_STATISTIC_RANGE_TYPE = createIdentity(StatisticRangeType.STATISTIC_RANGE_TYPE, StatisticRangeType.STATISTIC_RANGE_TYPE.ID);
		public static Identity<StatisticSportTypeRecord, Integer> IDENTITY_STATISTIC_SPORT_TYPE = createIdentity(StatisticSportType.STATISTIC_SPORT_TYPE, StatisticSportType.STATISTIC_SPORT_TYPE.ID);
		public static Identity<StatisticTypeRecord, Integer> IDENTITY_STATISTIC_TYPE = createIdentity(StatisticType.STATISTIC_TYPE, StatisticType.STATISTIC_TYPE.ID);
		public static Identity<SystemPropertiesRecord, Integer> IDENTITY_SYSTEM_PROPERTIES = createIdentity(SystemProperties.SYSTEM_PROPERTIES, SystemProperties.SYSTEM_PROPERTIES.ID);
		public static Identity<SystemPropertiesGroupRecord, Integer> IDENTITY_SYSTEM_PROPERTIES_GROUP = createIdentity(SystemPropertiesGroup.SYSTEM_PROPERTIES_GROUP, SystemPropertiesGroup.SYSTEM_PROPERTIES_GROUP.ID);
		public static Identity<TrainerRecord, Integer> IDENTITY_TRAINER = createIdentity(Trainer.TRAINER, Trainer.TRAINER.ID);
		public static Identity<TrainerQualificationRecord, Integer> IDENTITY_TRAINER_QUALIFICATION = createIdentity(TrainerQualification.TRAINER_QUALIFICATION, TrainerQualification.TRAINER_QUALIFICATION.ID);
		public static Identity<TrainerSportTypeRecord, Integer> IDENTITY_TRAINER_SPORT_TYPE = createIdentity(TrainerSportType.TRAINER_SPORT_TYPE, TrainerSportType.TRAINER_SPORT_TYPE.ID);
		public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
		public static Identity<UserStatusRecord, Integer> IDENTITY_USER_STATUS = createIdentity(UserStatus.USER_STATUS, UserStatus.USER_STATUS.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AwardRecord> AWARD_PKEY = createUniqueKey(Award.AWARD, Award.AWARD.ID);
		public static final UniqueKey<ChampionshipRecord> CHAMPIONSHIP_PKEY = createUniqueKey(Championship.CHAMPIONSHIP, Championship.CHAMPIONSHIP.ID);
		public static final UniqueKey<ChampionshipSubTypeRecord> CHAMPIONSHIP_SUB_TYPE_PKEY = createUniqueKey(ChampionshipSubType.CHAMPIONSHIP_SUB_TYPE, ChampionshipSubType.CHAMPIONSHIP_SUB_TYPE.ID);
		public static final UniqueKey<ChampionshipTypeRecord> CHEMPIONSHIP_TYPE_PKEY = createUniqueKey(ChampionshipType.CHAMPIONSHIP_TYPE, ChampionshipType.CHAMPIONSHIP_TYPE.ID);
		public static final UniqueKey<ChampionshipTypeRelationRecord> CHAMPIONSHIP_TYPE_RELATION_PKEY = createUniqueKey(ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION, ChampionshipTypeRelation.CHAMPIONSHIP_TYPE_RELATION.ID);
		public static final UniqueKey<CityRecord> CITY_PKEY = createUniqueKey(City.CITY, City.CITY.ID);
		public static final UniqueKey<ConditionRecord> CONDITION_PKEY = createUniqueKey(Condition.CONDITION, Condition.CONDITION.ID);
		public static final UniqueKey<EventRecord> EVENT_PKEY = createUniqueKey(Event.EVENT, Event.EVENT.ID);
		public static final UniqueKey<EventSubscriptionRecord> EVENT_SUBSCRIPTION_PKEY = createUniqueKey(EventSubscription.EVENT_SUBSCRIPTION, EventSubscription.EVENT_SUBSCRIPTION.ID);
		public static final UniqueKey<EventSubscriptionRecord> EVENT_SUBSCRIPTION_RECIPIENT_EMAIL_KEY = createUniqueKey(EventSubscription.EVENT_SUBSCRIPTION, EventSubscription.EVENT_SUBSCRIPTION.RECIPIENT_EMAIL);
		public static final UniqueKey<EventTypeRecord> EVENT_TYPE_PKEY = createUniqueKey(EventType.EVENT_TYPE, EventType.EVENT_TYPE.ID);
		public static final UniqueKey<FileTypeRecord> FILE_TYPE_PKEY = createUniqueKey(FileType.FILE_TYPE, FileType.FILE_TYPE.ID);
		public static final UniqueKey<GenderRecord> GENDER_PKEY = createUniqueKey(Gender.GENDER, Gender.GENDER.ID);
		public static final UniqueKey<NewsRecord> NEWS_PKEY = createUniqueKey(News.NEWS, News.NEWS.ID);
		public static final UniqueKey<NewsFileRecord> NEWS_FILE_PKEY = createUniqueKey(NewsFile.NEWS_FILE, NewsFile.NEWS_FILE.ID);
		public static final UniqueKey<NewsTypeRecord> NEWS_TYPE_PKEY = createUniqueKey(NewsType.NEWS_TYPE, NewsType.NEWS_TYPE.ID);
		public static final UniqueKey<ObjectTypeRecord> OBJECT_TYPE_PKEY = createUniqueKey(ObjectType.OBJECT_TYPE, ObjectType.OBJECT_TYPE.ID);
		public static final UniqueKey<OrganisationRecord> ORGANISATION_PKEY = createUniqueKey(Organisation.ORGANISATION, Organisation.ORGANISATION.ID);
		public static final UniqueKey<OwnershipRecord> OWNERSHIP_PKEY = createUniqueKey(Ownership.OWNERSHIP, Ownership.OWNERSHIP.ID);
		public static final UniqueKey<PurposeRecord> PURPOSE_PKEY = createUniqueKey(Purpose.PURPOSE, Purpose.PURPOSE.ID);
		public static final UniqueKey<RefereeRecord> REFEREE_PKEY = createUniqueKey(Referee.REFEREE, Referee.REFEREE.ID);
		public static final UniqueKey<RefereeCategoryRecord> CATEGORY_PKEY = createUniqueKey(RefereeCategory.REFEREE_CATEGORY, RefereeCategory.REFEREE_CATEGORY.ID);
		public static final UniqueKey<RefereeSportTypeRecord> REFEREE_SPORT_TYPE_PKEY = createUniqueKey(RefereeSportType.REFEREE_SPORT_TYPE, RefereeSportType.REFEREE_SPORT_TYPE.ID);
		public static final UniqueKey<RefereeSportTypeRecord> REFEREE_SPORT_TYPE_REFEREE_ID_SPORT_TYPE_ID_KEY = createUniqueKey(RefereeSportType.REFEREE_SPORT_TYPE, RefereeSportType.REFEREE_SPORT_TYPE.REFEREE_ID, RefereeSportType.REFEREE_SPORT_TYPE.SPORT_TYPE_ID);
		public static final UniqueKey<RegionRecord> REGION_PKEY = createUniqueKey(Region.REGION, Region.REGION.ID);
		public static final UniqueKey<ResultRecord> RESULT_PKEY = createUniqueKey(Result.RESULT, Result.RESULT.ID);
		public static final UniqueKey<SectionRecord> SECTION_PKEY = createUniqueKey(Section.SECTION, Section.SECTION.ID);
		public static final UniqueKey<SportObjectRecord> SPORT_OBJECT_PKEY = createUniqueKey(SportObject.SPORT_OBJECT, SportObject.SPORT_OBJECT.ID);
		public static final UniqueKey<SportTypeRecord> SPORT_TYPE_PKEY = createUniqueKey(SportType.SPORT_TYPE, SportType.SPORT_TYPE.ID);
		public static final UniqueKey<SportTypeFileRecord> SPORT_TYPE_FILE_PKEY = createUniqueKey(SportTypeFile.SPORT_TYPE_FILE, SportTypeFile.SPORT_TYPE_FILE.ID);
		public static final UniqueKey<SportsmanRecord> SPORTSMAN_PKEY = createUniqueKey(Sportsman.SPORTSMAN, Sportsman.SPORTSMAN.ID);
		public static final UniqueKey<SportsmanFileRecord> SPORTSMAN_FILE_PKEY = createUniqueKey(SportsmanFile.SPORTSMAN_FILE, SportsmanFile.SPORTSMAN_FILE.ID);
		public static final UniqueKey<SportsmanRankRecord> TITLE_PKEY = createUniqueKey(SportsmanRank.SPORTSMAN_RANK, SportsmanRank.SPORTSMAN_RANK.ID);
		public static final UniqueKey<SportsmanSportTypeRecord> SPORTSMAN_SPORT_TYPE_PKEY = createUniqueKey(SportsmanSportType.SPORTSMAN_SPORT_TYPE, SportsmanSportType.SPORTSMAN_SPORT_TYPE.ID);
		public static final UniqueKey<SportsmanTrainerRecord> SPORTSMAN_TRAINER_PKEY = createUniqueKey(SportsmanTrainer.SPORTSMAN_TRAINER, SportsmanTrainer.SPORTSMAN_TRAINER.ID);
		public static final UniqueKey<StatisticRecord> STATISTIC_SPORTSMAN_PKEY = createUniqueKey(Statistic.STATISTIC, Statistic.STATISTIC.ID);
		public static final UniqueKey<StatisticCategoryRecord> STATISTIC_CATEGORY_PKEY = createUniqueKey(StatisticCategory.STATISTIC_CATEGORY, StatisticCategory.STATISTIC_CATEGORY.ID);
		public static final UniqueKey<StatisticRangeTypeRecord> STATISTIC_RANGE_TYPE_PKEY = createUniqueKey(StatisticRangeType.STATISTIC_RANGE_TYPE, StatisticRangeType.STATISTIC_RANGE_TYPE.ID);
		public static final UniqueKey<StatisticSportTypeRecord> STATISTIC_SPORT_TYPE_PKEY = createUniqueKey(StatisticSportType.STATISTIC_SPORT_TYPE, StatisticSportType.STATISTIC_SPORT_TYPE.ID);
		public static final UniqueKey<StatisticTypeRecord> STATISTIC_TYPE_PKEY = createUniqueKey(StatisticType.STATISTIC_TYPE, StatisticType.STATISTIC_TYPE.ID);
		public static final UniqueKey<SystemPropertiesRecord> SYSTEM_PROPERTIES_PKEY = createUniqueKey(SystemProperties.SYSTEM_PROPERTIES, SystemProperties.SYSTEM_PROPERTIES.ID);
		public static final UniqueKey<SystemPropertiesGroupRecord> SYSTEM_PROPERTIES_GROUP_PKEY = createUniqueKey(SystemPropertiesGroup.SYSTEM_PROPERTIES_GROUP, SystemPropertiesGroup.SYSTEM_PROPERTIES_GROUP.ID);
		public static final UniqueKey<TrainerRecord> TRAINER_PKEY = createUniqueKey(Trainer.TRAINER, Trainer.TRAINER.ID);
		public static final UniqueKey<TrainerQualificationRecord> QUALIFICATION_PKEY = createUniqueKey(TrainerQualification.TRAINER_QUALIFICATION, TrainerQualification.TRAINER_QUALIFICATION.ID);
		public static final UniqueKey<TrainerSportTypeRecord> TRAINER_SPORT_TYPE_PKEY = createUniqueKey(TrainerSportType.TRAINER_SPORT_TYPE, TrainerSportType.TRAINER_SPORT_TYPE.ID);
		public static final UniqueKey<UserRecord> USER_PKEY = createUniqueKey(User.USER, User.USER.ID);
		public static final UniqueKey<UserStatusRecord> USER_STATUS_PKEY = createUniqueKey(UserStatus.USER_STATUS, UserStatus.USER_STATUS.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<SportsmanRecord, GenderRecord> SPORTSMAN__SPORTSMAN_GENDER_ID_FKEY = createForeignKey(Keys.GENDER_PKEY, Sportsman.SPORTSMAN, Sportsman.SPORTSMAN.GENDER_ID);
		public static final ForeignKey<SystemPropertiesRecord, SystemPropertiesGroupRecord> SYSTEM_PROPERTIES__SYSTEM_PROPERTIES_GROUP_ID_FKEY = createForeignKey(Keys.SYSTEM_PROPERTIES_GROUP_PKEY, SystemProperties.SYSTEM_PROPERTIES, SystemProperties.SYSTEM_PROPERTIES.GROUP_ID);
		public static final ForeignKey<UserRecord, UserStatusRecord> USER__USER_STATUS_ID_FKEY = createForeignKey(Keys.USER_STATUS_PKEY, User.USER, User.USER.STATUS_ID);
	}
}
