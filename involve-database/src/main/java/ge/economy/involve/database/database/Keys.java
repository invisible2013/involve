/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database;


import ge.economy.involve.database.database.tables.FileType;
import ge.economy.involve.database.database.tables.Initiate;
import ge.economy.involve.database.database.tables.InitiatedIssue;
import ge.economy.involve.database.database.tables.InitiativeVote;
import ge.economy.involve.database.database.tables.PollAnswer;
import ge.economy.involve.database.database.tables.Priority;
import ge.economy.involve.database.database.tables.PriorityAnswer;
import ge.economy.involve.database.database.tables.PriorityItem;
import ge.economy.involve.database.database.tables.PriorityVote;
import ge.economy.involve.database.database.tables.Reform;
import ge.economy.involve.database.database.tables.ReformDetail;
import ge.economy.involve.database.database.tables.ReformFile;
import ge.economy.involve.database.database.tables.ReformType;
import ge.economy.involve.database.database.tables.Session;
import ge.economy.involve.database.database.tables.SessionPoll;
import ge.economy.involve.database.database.tables.SessionPollVote;
import ge.economy.involve.database.database.tables.SessionVote;
import ge.economy.involve.database.database.tables.Sphere;
import ge.economy.involve.database.database.tables.UserApprove;
import ge.economy.involve.database.database.tables.UserGroup;
import ge.economy.involve.database.database.tables.UserType;
import ge.economy.involve.database.database.tables.Users;
import ge.economy.involve.database.database.tables.records.FileTypeRecord;
import ge.economy.involve.database.database.tables.records.InitiateRecord;
import ge.economy.involve.database.database.tables.records.InitiatedIssueRecord;
import ge.economy.involve.database.database.tables.records.InitiativeVoteRecord;
import ge.economy.involve.database.database.tables.records.PollAnswerRecord;
import ge.economy.involve.database.database.tables.records.PriorityAnswerRecord;
import ge.economy.involve.database.database.tables.records.PriorityItemRecord;
import ge.economy.involve.database.database.tables.records.PriorityRecord;
import ge.economy.involve.database.database.tables.records.PriorityVoteRecord;
import ge.economy.involve.database.database.tables.records.ReformDetailRecord;
import ge.economy.involve.database.database.tables.records.ReformFileRecord;
import ge.economy.involve.database.database.tables.records.ReformRecord;
import ge.economy.involve.database.database.tables.records.ReformTypeRecord;
import ge.economy.involve.database.database.tables.records.SessionPollRecord;
import ge.economy.involve.database.database.tables.records.SessionPollVoteRecord;
import ge.economy.involve.database.database.tables.records.SessionRecord;
import ge.economy.involve.database.database.tables.records.SessionVoteRecord;
import ge.economy.involve.database.database.tables.records.SphereRecord;
import ge.economy.involve.database.database.tables.records.UserApproveRecord;
import ge.economy.involve.database.database.tables.records.UserGroupRecord;
import ge.economy.involve.database.database.tables.records.UserTypeRecord;
import ge.economy.involve.database.database.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<ReformRecord, Integer> IDENTITY_REFORM = Identities0.IDENTITY_REFORM;
	public static final Identity<SessionRecord, Integer> IDENTITY_SESSION = Identities0.IDENTITY_SESSION;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<FileTypeRecord> FILE_TYPE_PKEY = UniqueKeys0.FILE_TYPE_PKEY;
	public static final UniqueKey<InitiateRecord> INITIATE_PKEY = UniqueKeys0.INITIATE_PKEY;
	public static final UniqueKey<InitiatedIssueRecord> INITIATED_ISSUE_PKEY = UniqueKeys0.INITIATED_ISSUE_PKEY;
	public static final UniqueKey<InitiativeVoteRecord> INITIATIVE_VOTE_PKEY = UniqueKeys0.INITIATIVE_VOTE_PKEY;
	public static final UniqueKey<PollAnswerRecord> POLL_ANSWER_PKEY = UniqueKeys0.POLL_ANSWER_PKEY;
	public static final UniqueKey<PriorityRecord> PRIORITY_PKEY = UniqueKeys0.PRIORITY_PKEY;
	public static final UniqueKey<PriorityAnswerRecord> PRIORITY_ANSWER_PKEY = UniqueKeys0.PRIORITY_ANSWER_PKEY;
	public static final UniqueKey<PriorityItemRecord> PRIORITY_ITEM_PKEY = UniqueKeys0.PRIORITY_ITEM_PKEY;
	public static final UniqueKey<PriorityVoteRecord> PRIORITY_VOTE_PKEY = UniqueKeys0.PRIORITY_VOTE_PKEY;
	public static final UniqueKey<ReformRecord> REFORM_PKEY = UniqueKeys0.REFORM_PKEY;
	public static final UniqueKey<ReformDetailRecord> REFORM_DETAIL_PKEY = UniqueKeys0.REFORM_DETAIL_PKEY;
	public static final UniqueKey<ReformFileRecord> REFORM_FILE_PKEY = UniqueKeys0.REFORM_FILE_PKEY;
	public static final UniqueKey<ReformTypeRecord> REFORM_TYPE_PKEY = UniqueKeys0.REFORM_TYPE_PKEY;
	public static final UniqueKey<SessionRecord> SESSION_PKEY = UniqueKeys0.SESSION_PKEY;
	public static final UniqueKey<SessionPollRecord> QUESTION_PKEY = UniqueKeys0.QUESTION_PKEY;
	public static final UniqueKey<SessionPollVoteRecord> SESSION_POLL_VOTE_PKEY = UniqueKeys0.SESSION_POLL_VOTE_PKEY;
	public static final UniqueKey<SessionVoteRecord> SESSION_VOTE_PKEY = UniqueKeys0.SESSION_VOTE_PKEY;
	public static final UniqueKey<SphereRecord> SPHERE_PKEY = UniqueKeys0.SPHERE_PKEY;
	public static final UniqueKey<UserApproveRecord> USER_APPROVE_PKEY = UniqueKeys0.USER_APPROVE_PKEY;
	public static final UniqueKey<UserGroupRecord> USER_GROUP_PKEY = UniqueKeys0.USER_GROUP_PKEY;
	public static final UniqueKey<UserTypeRecord> USER_TYPE_PKEY = UniqueKeys0.USER_TYPE_PKEY;
	public static final UniqueKey<UsersRecord> USERS_PKEY = UniqueKeys0.USERS_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<ReformRecord, Integer> IDENTITY_REFORM = createIdentity(Reform.REFORM, Reform.REFORM.ID);
		public static Identity<SessionRecord, Integer> IDENTITY_SESSION = createIdentity(Session.SESSION, Session.SESSION.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<FileTypeRecord> FILE_TYPE_PKEY = createUniqueKey(FileType.FILE_TYPE, FileType.FILE_TYPE.ID);
		public static final UniqueKey<InitiateRecord> INITIATE_PKEY = createUniqueKey(Initiate.INITIATE, Initiate.INITIATE.ID);
		public static final UniqueKey<InitiatedIssueRecord> INITIATED_ISSUE_PKEY = createUniqueKey(InitiatedIssue.INITIATED_ISSUE, InitiatedIssue.INITIATED_ISSUE.ID);
		public static final UniqueKey<InitiativeVoteRecord> INITIATIVE_VOTE_PKEY = createUniqueKey(InitiativeVote.INITIATIVE_VOTE, InitiativeVote.INITIATIVE_VOTE.ID);
		public static final UniqueKey<PollAnswerRecord> POLL_ANSWER_PKEY = createUniqueKey(PollAnswer.POLL_ANSWER, PollAnswer.POLL_ANSWER.ID);
		public static final UniqueKey<PriorityRecord> PRIORITY_PKEY = createUniqueKey(Priority.PRIORITY, Priority.PRIORITY.ID);
		public static final UniqueKey<PriorityAnswerRecord> PRIORITY_ANSWER_PKEY = createUniqueKey(PriorityAnswer.PRIORITY_ANSWER, PriorityAnswer.PRIORITY_ANSWER.ID);
		public static final UniqueKey<PriorityItemRecord> PRIORITY_ITEM_PKEY = createUniqueKey(PriorityItem.PRIORITY_ITEM, PriorityItem.PRIORITY_ITEM.ID);
		public static final UniqueKey<PriorityVoteRecord> PRIORITY_VOTE_PKEY = createUniqueKey(PriorityVote.PRIORITY_VOTE, PriorityVote.PRIORITY_VOTE.ID);
		public static final UniqueKey<ReformRecord> REFORM_PKEY = createUniqueKey(Reform.REFORM, Reform.REFORM.ID);
		public static final UniqueKey<ReformDetailRecord> REFORM_DETAIL_PKEY = createUniqueKey(ReformDetail.REFORM_DETAIL, ReformDetail.REFORM_DETAIL.ID);
		public static final UniqueKey<ReformFileRecord> REFORM_FILE_PKEY = createUniqueKey(ReformFile.REFORM_FILE, ReformFile.REFORM_FILE.ID);
		public static final UniqueKey<ReformTypeRecord> REFORM_TYPE_PKEY = createUniqueKey(ReformType.REFORM_TYPE, ReformType.REFORM_TYPE.ID);
		public static final UniqueKey<SessionRecord> SESSION_PKEY = createUniqueKey(Session.SESSION, Session.SESSION.ID);
		public static final UniqueKey<SessionPollRecord> QUESTION_PKEY = createUniqueKey(SessionPoll.SESSION_POLL, SessionPoll.SESSION_POLL.ID);
		public static final UniqueKey<SessionPollVoteRecord> SESSION_POLL_VOTE_PKEY = createUniqueKey(SessionPollVote.SESSION_POLL_VOTE, SessionPollVote.SESSION_POLL_VOTE.ID);
		public static final UniqueKey<SessionVoteRecord> SESSION_VOTE_PKEY = createUniqueKey(SessionVote.SESSION_VOTE, SessionVote.SESSION_VOTE.ID);
		public static final UniqueKey<SphereRecord> SPHERE_PKEY = createUniqueKey(Sphere.SPHERE, Sphere.SPHERE.ID);
		public static final UniqueKey<UserApproveRecord> USER_APPROVE_PKEY = createUniqueKey(UserApprove.USER_APPROVE, UserApprove.USER_APPROVE.ID);
		public static final UniqueKey<UserGroupRecord> USER_GROUP_PKEY = createUniqueKey(UserGroup.USER_GROUP, UserGroup.USER_GROUP.ID);
		public static final UniqueKey<UserTypeRecord> USER_TYPE_PKEY = createUniqueKey(UserType.USER_TYPE, UserType.USER_TYPE.ID);
		public static final UniqueKey<UsersRecord> USERS_PKEY = createUniqueKey(Users.USERS, Users.USERS.ID);
	}
}
