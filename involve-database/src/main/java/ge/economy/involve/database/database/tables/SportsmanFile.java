/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.converter.TimestampConverter;
import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.tables.records.SportsmanFileRecord;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SportsmanFile extends TableImpl<SportsmanFileRecord> {

	private static final long serialVersionUID = 30920659;

	/**
	 * The reference instance of <code>public.sportsman_file</code>
	 */
	public static final SportsmanFile SPORTSMAN_FILE = new SportsmanFile();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SportsmanFileRecord> getRecordType() {
		return SportsmanFileRecord.class;
	}

	/**
	 * The column <code>public.sportsman_file.id</code>.
	 */
	public final TableField<SportsmanFileRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.sportsman_file.file_name</code>.
	 */
	public final TableField<SportsmanFileRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman_file.create_date</code>.
	 */
	public final TableField<SportsmanFileRecord, Date> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaulted(true), this, "", new TimestampConverter());

	/**
	 * The column <code>public.sportsman_file.sportsman_id</code>.
	 */
	public final TableField<SportsmanFileRecord, Integer> SPORTSMAN_ID = createField("sportsman_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.sportsman_file.file_url</code>.
	 */
	public final TableField<SportsmanFileRecord, String> FILE_URL = createField("file_url", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.sportsman_file.file_type_id</code>.
	 */
	public final TableField<SportsmanFileRecord, Integer> FILE_TYPE_ID = createField("file_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.sportsman_file.is_main</code>.
	 */
	public final TableField<SportsmanFileRecord, Boolean> IS_MAIN = createField("is_main", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>public.sportsman_file</code> table reference
	 */
	public SportsmanFile() {
		this("sportsman_file", null);
	}

	/**
	 * Create an aliased <code>public.sportsman_file</code> table reference
	 */
	public SportsmanFile(String alias) {
		this(alias, SPORTSMAN_FILE);
	}

	private SportsmanFile(String alias, Table<SportsmanFileRecord> aliased) {
		this(alias, aliased, null);
	}

	private SportsmanFile(String alias, Table<SportsmanFileRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SportsmanFileRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SPORTSMAN_FILE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SportsmanFileRecord> getPrimaryKey() {
		return Keys.SPORTSMAN_FILE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SportsmanFileRecord>> getKeys() {
		return Arrays.<UniqueKey<SportsmanFileRecord>>asList(Keys.SPORTSMAN_FILE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SportsmanFile as(String alias) {
		return new SportsmanFile(alias, this);
	}

	/**
	 * Rename this table
	 */
	public SportsmanFile rename(String name) {
		return new SportsmanFile(name, null);
	}
}
