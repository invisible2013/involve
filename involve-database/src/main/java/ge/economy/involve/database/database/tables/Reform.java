/**
 * This class is generated by jOOQ
 */
package ge.economy.involve.database.database.tables;


import ge.economy.involve.database.converter.TimestampConverter;
import ge.economy.involve.database.database.Keys;
import ge.economy.involve.database.database.Public;
import ge.economy.involve.database.database.tables.records.ReformRecord;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reform extends TableImpl<ReformRecord> {

	private static final long serialVersionUID = -301224632;

	/**
	 * The reference instance of <code>public.reform</code>
	 */
	public static final Reform REFORM = new Reform();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ReformRecord> getRecordType() {
		return ReformRecord.class;
	}

	/**
	 * The column <code>public.reform.id</code>.
	 */
	public final TableField<ReformRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.reform.name</code>.
	 */
	public final TableField<ReformRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.reform_type_id</code>.
	 */
	public final TableField<ReformRecord, Integer> REFORM_TYPE_ID = createField("reform_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.reform.progress_bar_name_1</code>.
	 */
	public final TableField<ReformRecord, String> PROGRESS_BAR_NAME_1 = createField("progress_bar_name_1", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.progress_bar_percent_1</code>.
	 */
	public final TableField<ReformRecord, String> PROGRESS_BAR_PERCENT_1 = createField("progress_bar_percent_1", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

	/**
	 * The column <code>public.reform.progress_bar_name_2</code>.
	 */
	public final TableField<ReformRecord, String> PROGRESS_BAR_NAME_2 = createField("progress_bar_name_2", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.progress_bar_percent_2</code>.
	 */
	public final TableField<ReformRecord, String> PROGRESS_BAR_PERCENT_2 = createField("progress_bar_percent_2", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.progress_bar_name_3</code>.
	 */
	public final TableField<ReformRecord, String> PROGRESS_BAR_NAME_3 = createField("progress_bar_name_3", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.progress_bar_percent_3</code>.
	 */
	public final TableField<ReformRecord, String> PROGRESS_BAR_PERCENT_3 = createField("progress_bar_percent_3", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.general_info</code>.
	 */
	public final TableField<ReformRecord, String> GENERAL_INFO = createField("general_info", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.experience</code>.
	 */
	public final TableField<ReformRecord, String> EXPERIENCE = createField("experience", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.reform.create_date</code>.
	 */
	public final TableField<ReformRecord, Date> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new TimestampConverter());

	/**
	 * The column <code>public.reform.creator_id</code>.
	 */
	public final TableField<ReformRecord, Integer> CREATOR_ID = createField("creator_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.reform</code> table reference
	 */
	public Reform() {
		this("reform", null);
	}

	/**
	 * Create an aliased <code>public.reform</code> table reference
	 */
	public Reform(String alias) {
		this(alias, REFORM);
	}

	private Reform(String alias, Table<ReformRecord> aliased) {
		this(alias, aliased, null);
	}

	private Reform(String alias, Table<ReformRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ReformRecord> getPrimaryKey() {
		return Keys.REFORM_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ReformRecord>> getKeys() {
		return Arrays.<UniqueKey<ReformRecord>>asList(Keys.REFORM_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Reform as(String alias) {
		return new Reform(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Reform rename(String name) {
		return new Reform(name, null);
	}
}
